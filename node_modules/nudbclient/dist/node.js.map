{"version":3,"file":"node.js","sources":["../node_modules/ws/lib/constants.js","../node_modules/ws/lib/buffer-util.js","../node_modules/ws/lib/permessage-deflate.js","../node_modules/ws/lib/limiter.js","../node_modules/ws/lib/validation.js","../node_modules/ws/lib/receiver.js","../node_modules/ws/lib/sender.js","../node_modules/ws/lib/extension.js","../node_modules/ws/lib/websocket.js","../node_modules/ws/lib/event-target.js","../node_modules/ws/lib/subprotocol.js","../node_modules/ws/lib/websocket-server.js","../node_modules/ws/index.js","../node_modules/ws/lib/stream.js","../src/index.js?commonjs-entry","../src/index.js"],"sourcesContent":["'use strict';\n\nconst BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments'];\nconst hasBlob = typeof Blob !== 'undefined';\n\nif (hasBlob) BINARY_TYPES.push('blob');\n\nmodule.exports = {\n  BINARY_TYPES,\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  hasBlob,\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n\n  //\n  // The choice to employ `zlib.reset()` over `zlib.close()` is dictated by the\n  // fact that in Node.js versions prior to 13.10.0, the callback for\n  // `zlib.flush()` is not called if `zlib.close()` is used. Utilizing\n  // `zlib.reset()` ensures that either the callback is invoked or an error is\n  // emitted.\n  //\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n\n  if (this[kError]) {\n    this[kCallback](this[kError]);\n    return;\n  }\n\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst { isUtf8 } = require('buffer');\n\nconst { hasBlob } = require('./constants');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines whether a value is a `Blob`.\n *\n * @param {*} value The value to be tested\n * @return {Boolean} `true` if `value` is a `Blob`, else `false`\n * @private\n */\nfunction isBlob(value) {\n  return (\n    hasBlob &&\n    typeof value === 'object' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    (value[Symbol.toStringTag] === 'Blob' ||\n      value[Symbol.toStringTag] === 'File')\n  );\n}\n\nmodule.exports = {\n  isBlob,\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst DEFER_EVENT = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._allowSynchronousEvents =\n      options.allowSynchronousEvents !== undefined\n        ? options.allowSynchronousEvents\n        : true;\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._errored = false;\n    this._loop = false;\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64(cb);\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData(cb);\n          break;\n        case INFLATING:\n        case DEFER_EVENT:\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    if (!this._errored) cb();\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getInfo(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      const error = this.createError(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n\n      cb(error);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      const error = this.createError(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (!this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        const error = this.createError(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        const error = this.createError(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    } else {\n      const error = this.createError(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        const error = this.createError(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n\n        cb(error);\n        return;\n      }\n    } else if (this._masked) {\n      const error = this.createError(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength16(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength64(cb) {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      const error = this.createError(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  haveLength(cb) {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        const error = this.createError(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data, cb);\n      return;\n    }\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    this.dataMessage(cb);\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          const error = this.createError(\n            RangeError,\n            'Max payload size exceeded',\n            false,\n            1009,\n            'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._fragments.push(buf);\n      }\n\n      this.dataMessage(cb);\n      if (this._state === GET_INFO) this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  dataMessage(cb) {\n    if (!this._fin) {\n      this._state = GET_INFO;\n      return;\n    }\n\n    const messageLength = this._messageLength;\n    const fragments = this._fragments;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragmented = 0;\n    this._fragments = [];\n\n    if (this._opcode === 2) {\n      let data;\n\n      if (this._binaryType === 'nodebuffer') {\n        data = concat(fragments, messageLength);\n      } else if (this._binaryType === 'arraybuffer') {\n        data = toArrayBuffer(concat(fragments, messageLength));\n      } else if (this._binaryType === 'blob') {\n        data = new Blob(fragments);\n      } else {\n        data = fragments;\n      }\n\n      if (this._allowSynchronousEvents) {\n        this.emit('message', data, true);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', data, true);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    } else {\n      const buf = concat(fragments, messageLength);\n\n      if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n        const error = this.createError(\n          Error,\n          'invalid UTF-8 sequence',\n          true,\n          1007,\n          'WS_ERR_INVALID_UTF8'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (this._state === INFLATING || this._allowSynchronousEvents) {\n        this.emit('message', buf, false);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', buf, false);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data, cb) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this._loop = false;\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          const error = this.createError(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n\n          cb(error);\n          return;\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          const error = this.createError(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._loop = false;\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n\n      this._state = GET_INFO;\n      return;\n    }\n\n    if (this._allowSynchronousEvents) {\n      this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n      this._state = GET_INFO;\n    } else {\n      this._state = DEFER_EVENT;\n      setImmediate(() => {\n        this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n        this._state = GET_INFO;\n        this.startLoop(cb);\n      });\n    }\n  }\n\n  /**\n   * Builds an error object.\n   *\n   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n   * @param {String} message The error message\n   * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n   *     `message`\n   * @param {Number} statusCode The status code\n   * @param {String} errorCode The exposed error code\n   * @return {(Error|RangeError)} The error\n   * @private\n   */\n  createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n    this._loop = false;\n    this._errored = true;\n\n    const err = new ErrorCtor(\n      prefix ? `Invalid WebSocket frame: ${message}` : message\n    );\n\n    Error.captureStackTrace(err, this.createError);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n  }\n}\n\nmodule.exports = Receiver;\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex\" }] */\n\n'use strict';\n\nconst { Duplex } = require('stream');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER, kWebSocket, NOOP } = require('./constants');\nconst { isBlob, isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\nconst RANDOM_POOL_SIZE = 8 * 1024;\nlet randomPool;\nlet randomPoolPointer = RANDOM_POOL_SIZE;\n\nconst DEFAULT = 0;\nconst DEFLATING = 1;\nconst GET_BLOB_DATA = 2;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {Duplex} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._queue = [];\n    this._state = DEFAULT;\n    this.onerror = NOOP;\n    this[kWebSocket] = undefined;\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        if (randomPoolPointer === RANDOM_POOL_SIZE) {\n          /* istanbul ignore else  */\n          if (randomPool === undefined) {\n            //\n            // This is lazily initialized because server-sent frames must not\n            // be masked so it may never be used.\n            //\n            randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n          }\n\n          randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n          randomPoolPointer = 0;\n        }\n\n        mask[0] = randomPool[randomPoolPointer++];\n        mask[1] = randomPool[randomPoolPointer++];\n        mask[2] = randomPool[randomPoolPointer++];\n        mask[3] = randomPool[randomPoolPointer++];\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    const opts = {\n      [kByteLength]: byteLength,\n      fin: options.fin,\n      generateMask: this._generateMask,\n      mask: options.mask,\n      maskBuffer: this._maskBuffer,\n      opcode,\n      readOnly,\n      rsv1\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, this._compress, opts, cb]);\n      } else {\n        this.getBlobData(data, this._compress, opts, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n    } else {\n      this.dispatch(data, this._compress, opts, cb);\n    }\n  }\n\n  /**\n   * Gets the contents of a blob as binary data.\n   *\n   * @param {Blob} blob The blob\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     the data\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  getBlobData(blob, compress, options, cb) {\n    this._bufferedBytes += options[kByteLength];\n    this._state = GET_BLOB_DATA;\n\n    blob\n      .arrayBuffer()\n      .then((arrayBuffer) => {\n        if (this._socket.destroyed) {\n          const err = new Error(\n            'The socket was closed while the blob was being read'\n          );\n\n          //\n          // `callCallbacks` is called in the next tick to ensure that errors\n          // that might be thrown in the callbacks behave like errors thrown\n          // outside the promise chain.\n          //\n          process.nextTick(callCallbacks, this, err, cb);\n          return;\n        }\n\n        this._bufferedBytes -= options[kByteLength];\n        const data = toBuffer(arrayBuffer);\n\n        if (!compress) {\n          this._state = DEFAULT;\n          this.sendFrame(Sender.frame(data, options), cb);\n          this.dequeue();\n        } else {\n          this.dispatch(data, compress, options, cb);\n        }\n      })\n      .catch((err) => {\n        //\n        // `onError` is called in the next tick for the same reason that\n        // `callCallbacks` above is.\n        //\n        process.nextTick(onError, this, err, cb);\n      });\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._state = DEFLATING;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        callCallbacks(this, err, cb);\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._state = DEFAULT;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (this._state === DEFAULT && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {(Buffer | String)[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Calls queued callbacks with an error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error to call the callbacks with\n * @param {Function} [cb] The first callback\n * @private\n */\nfunction callCallbacks(sender, err, cb) {\n  if (typeof cb === 'function') cb(err);\n\n  for (let i = 0; i < sender._queue.length; i++) {\n    const params = sender._queue[i];\n    const callback = params[params.length - 1];\n\n    if (typeof callback === 'function') callback(err);\n  }\n}\n\n/**\n * Handles a `Sender` error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error\n * @param {Function} [cb] The first pending callback\n * @private\n */\nfunction onError(sender, err, cb) {\n  callCallbacks(sender, err, cb);\n  sender.onerror(err);\n}\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex|Readable$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Duplex, Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst { isBlob } = require('./validation');\n\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._errorEmitted = false;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._autoPong = options.autoPong;\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * For historical reasons, the custom \"nodebuffer\" type is used by the default\n   * instead of \"blob\".\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      allowSynchronousEvents: options.allowSynchronousEvents,\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    const sender = new Sender(socket, this._extensions, options.generateMask);\n\n    this._receiver = receiver;\n    this._sender = sender;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    sender[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    sender.onerror = senderOnError;\n\n    //\n    // These methods may not be available if `socket` is just a `Duplex`.\n    //\n    if (socket.setTimeout) socket.setTimeout(0);\n    if (socket.setNoDelay) socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    setCloseTimer(this);\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any\n *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple\n *     times in the same tick\n * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n *     automatically send a pong in response to a ping\n * @param {Function} [options.finishRequest] A function which can be used to\n *     customize the headers of each http request before it is sent\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    allowSynchronousEvents: true,\n    autoPong: true,\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  websocket._autoPong = opts.autoPong;\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n  }\n\n  if (parsedUrl.protocol === 'http:') {\n    parsedUrl.protocol = 'ws:';\n  } else if (parsedUrl.protocol === 'https:') {\n    parsedUrl.protocol = 'wss:';\n  }\n\n  websocket._url = parsedUrl.href;\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", ' +\n      '\"http:\", \"https:\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection =\n    opts.createConnection || (isSecure ? tlsConnect : netConnect);\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n          ? false\n          : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const upgrade = res.headers.upgrade;\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      allowSynchronousEvents: opts.allowSynchronousEvents,\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  //\n  // The following assignment is practically useless and is done only for\n  // consistency.\n  //\n  websocket._errorEmitted = true;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = isBlob(data) ? data.size : toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The `Sender` error event handler.\n *\n * @param {Error} The error\n * @private\n */\nfunction senderOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket.readyState === WebSocket.CLOSED) return;\n  if (websocket.readyState === WebSocket.OPEN) {\n    websocket._readyState = WebSocket.CLOSING;\n    setCloseTimer(websocket);\n  }\n\n  //\n  // `socket.end()` is used instead of `socket.destroy()` to allow the other\n  // peer to finish sending queued data. There is no need to set a timer here\n  // because `CLOSING` means that it is already set or not needed.\n  //\n  this._socket.end();\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * Set a timer to destroy the underlying raw socket of a WebSocket.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @private\n */\nfunction setCloseTimer(websocket) {\n  websocket._closeTimer = setTimeout(\n    websocket._socket.destroy.bind(websocket._socket),\n    closeTimeout\n  );\n}\n\n/**\n * The listener of the socket `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the socket `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the socket `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the socket `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst { Duplex } = require('stream');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n   *     automatically send a pong in response to a ping\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      allowSynchronousEvents: true,\n      autoPong: true,\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const upgrade = req.headers.upgrade;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (key === undefined || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null, undefined, this.options);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      allowSynchronousEvents: this.options.allowSynchronousEvents,\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n","'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.createWebSocketStream = require('./lib/stream');\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nWebSocket.WebSocket = WebSocket;\nWebSocket.WebSocketServer = WebSocket.Server;\n\nmodule.exports = WebSocket;\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^WebSocket$\" }] */\n'use strict';\n\nconst WebSocket = require('./websocket');\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","import { getDefaultExportFromCjs } from \"\u0000commonjsHelpers.js\";\nimport { __require as requireSrc } from \"/data/data/com.termux/files/home/Clientnudb/src/index.js\";\nvar srcExports = requireSrc();\nexport { srcExports as __moduleExports };\nexport default /*@__PURE__*/getDefaultExportFromCjs(srcExports);","class Nudb {\n  constructor(wsUrl, options = {}) {\n    this.wsUrl = wsUrl;\n    this.socket = null;\n    this.listeners = {};\n    this.dataCallbacks = {};\n    this.queue = [];\n    this.headers = options.headers || {};\n    this.connect();\n  }\n\n  connect() {\n    const WebSocketImpl =\n      typeof WebSocket !== \"undefined\"\n        ? WebSocket\n        : require(\"ws\"); // fallback untuk Node.js\n\n    this.socket = new WebSocketImpl(this.wsUrl);\n\n    this.socket.onopen = () => {\n      console.log(\"🟢 WebSocket connected\");\n      while (this.queue.length > 0) {\n        const action = this.queue.shift();\n        this.socket.send(JSON.stringify(action));\n      }\n      Object.keys(this.listeners).forEach((path) => {\n        this.sendMessage({ type: \"subscribe\", path });\n      });\n    };\n\n    this.socket.onmessage = (event) => {\n      try {\n        const msg = JSON.parse(event.data);\n        if (msg.type === \"update\" && this.listeners[msg.path]) {\n          this.listeners[msg.path].forEach((cb) => cb(msg.data));\n        }\n        if (msg.type === \"data\" && this.dataCallbacks[msg.path]) {\n          this.dataCallbacks[msg.path].forEach((cb) => cb(msg.data));\n          delete this.dataCallbacks[msg.path];\n        }\n      } catch (err) {\n        console.error(\"Error parsing message:\", err);\n      }\n    };\n\n    this.socket.onclose = () => {\n      console.warn(\"🔴 WebSocket disconnected. Reconnecting...\");\n      setTimeout(() => this.connect(), 3000);\n    };\n  }\n\n  _generateId() {\n    const chars =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let str = \"\";\n    for (let i = 0; i < 17; i++) {\n      str += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return `${Date.now()}${str}`;\n  }\n\n  setHeader(key, value) {\n    this.headers[key] = value;\n  }\n\n  sendMessage(msg) {\n    const fullMsg = { ...msg, headers: this.headers };\n    if (this.socket.readyState === 1) {\n      this.socket.send(JSON.stringify(fullMsg));\n    } else {\n      this.queue.push(fullMsg);\n    }\n  }\n\n  subscribe(path) {\n    this.sendMessage({ type: \"subscribe\", path });\n  }\n\n  on(path, callback) {\n    if (!this.listeners[path]) {\n      this.listeners[path] = [];\n      this.subscribe(path);\n    }\n    this.listeners[path].push(callback);\n  }\n\n  get(path, callback) {\n    if (!this.dataCallbacks[path]) {\n      this.dataCallbacks[path] = [];\n    }\n    this.dataCallbacks[path].push(callback);\n    this.sendMessage({ type: \"get\", path });\n  }\n\n  set(path, data) {\n    this.sendMessage({ type: \"set\", path, data });\n  }\n\n  push(path, data) {\n    const id = this._generateId();\n    this.set(`${path}/${id}`, data);\n    return id;\n  }\n\n  update(path, data) {\n    this.sendMessage({ type: \"update\", path, data });\n  }\n\n  delete(path) {\n    this.sendMessage({ type: \"delete\", path });\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.Nudb = Nudb;\n}\n\nmodule.exports = Nudb;"],"names":["BINARY_TYPES","hasBlob","Blob","push","constants","EMPTY_BUFFER","Buffer","alloc","GUID","kForOnEventAttribute","Symbol","kListener","kStatusCode","kWebSocket","NOOP","require$$0","FastBuffer","species","_mask","source","mask","output","offset","length","i","_unmask","buffer","bufferUtilModule","exports","concat","list","totalLength","target","allocUnsafe","buf","set","byteOffset","toArrayBuffer","byteLength","slice","toBuffer","data","readOnly","isBuffer","ArrayBuffer","isView","from","unmask","process","env","WS_NO_BUFFER_UTIL","bufferUtil","require","e","zlib","require$$1","Limiter","kDone","kRun","limiter","constructor","concurrency","this","pending","Infinity","jobs","add","job","shift","require$$2","require$$3","TRAILER","kPerMessageDeflate","kTotalLength","kCallback","kBuffers","kError","zlibLimiter","deflateOnData","chunk","inflateOnData","_maxPayload","RangeError","code","removeListener","reset","inflateOnError","err","_inflate","permessageDeflate","options","isServer","maxPayload","_options","_threshold","undefined","threshold","_isServer","_deflate","params","concurrencyLimit","extensionName","offer","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","accept","configurations","normalizeParams","acceptAsServer","acceptAsClient","cleanup","close","callback","Error","offers","opts","accepted","find","response","forEach","Object","keys","key","value","num","Number","isInteger","TypeError","decompress","fin","done","_decompress","result","compress","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","zlibInflateOptions","on","write","flush","_readableState","endEmitted","createDeflateRaw","zlibDeflateOptions","Z_SYNC_FLUSH","isUtf8","_isValidUTF8","len","validationModule","isBlob","arrayBuffer","type","stream","toStringTag","isValidStatusCode","isValidUTF8","tokenChars","WS_NO_UTF_8_VALIDATE","Writable","PerMessageDeflate","require$$4","receiver","super","_allowSynchronousEvents","allowSynchronousEvents","_binaryType","binaryType","_extensions","extensions","_skipUTF8Validation","skipUTF8Validation","_bufferedBytes","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_errored","_loop","_state","_write","encoding","cb","startLoop","consume","n","dst","Uint8Array","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","createError","compressed","haveLength","readUInt16BE","readUInt32BE","Math","pow","controlMessage","dataMessage","error","messageLength","fragments","emit","setImmediate","end","ErrorCtor","message","prefix","statusCode","errorCode","captureStackTrace","randomFillSync","applyMask","require$$5","kByteLength","maskBuffer","RANDOM_POOL_SIZE","randomPool","randomPoolPointer","Sender","socket","generateMask","_generateMask","_maskBuffer","_socket","_firstFragment","_queue","onerror","frame","dataLength","merge","skipMasking","payloadLength","opcode","rsv1","writeUInt16BE","writeUIntBE","enqueue","dispatch","sendFrame","ping","size","getBlobData","pong","send","perMessageDeflate","binary","blob","then","destroyed","nextTick","callCallbacks","dequeue","catch","onError","_","Reflect","apply","cork","uncork","sender","dest","name","elem","extension","format","map","Array","isArray","k","values","v","join","parse","header","create","paramName","mustUnescape","isEscaping","inQuotes","start","charCodeAt","SyntaxError","replace","token","EventEmitter","https","http","net","tls","randomBytes","createHash","URL","require$$7","require$$8","Receiver","require$$9","require$$10","require$$11","require$$12","EventTarget","addEventListener","removeEventListener","kCode","kData","kMessage","kReason","kTarget","kType","kWasClean","Event","defineProperty","prototype","enumerable","CloseEvent","reason","wasClean","ErrorEvent","MessageEvent","handler","listener","listeners","wrapper","isBinary","event","toString","callListener","_closeFrameReceived","_closeFrameSent","once","thisArg","handleEvent","call","eventTarget","require$$13","require$$14","require$$15","kAborted","protocolVersions","readyStates","subprotocolRegex","WebSocket","address","protocols","_closeCode","_closeMessage","_closeTimer","_errorEmitted","_paused","_protocol","_readyState","CONNECTING","_receiver","_sender","_bufferedAmount","_redirects","initAsClient","_autoPong","autoPong","includes","bufferedAmount","_writableState","isPaused","onclose","onopen","onmessage","protocol","readyState","url","_url","setSocket","head","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","senderOnError","setTimeout","setNoDelay","unshift","socketOnClose","socketOnData","socketOnEnd","socketOnError","OPEN","emitClose","CLOSED","removeAllListeners","CLOSING","errorEmitted","setCloseTimer","msg","abortHandshake","_req","pause","sendAfterClose","resume","needDrain","terminate","destroy","websocket","protocolVersion","followRedirects","maxRedirects","socketPath","hostname","timeout","method","host","path","port","parsedUrl","href","isSecure","isIpcUrl","invalidUrlMessage","pathname","hash","emitErrorAndClose","defaultPort","request","protocolSet","Set","req","createConnection","tlsConnect","netConnect","startsWith","headers","Connection","Upgrade","search","handshakeTimeout","test","has","origin","Origin","username","password","auth","parts","split","_originalIpc","_originalSecure","_originalHostOrSocketPath","entries","toLowerCase","listenerCount","isSameHost","authorization","cookie","res","location","addr","abort","upgrade","digest","update","serverProt","protError","secWebSocketExtensions","extensionNames","finishRequest","connect","servername","isIP","setHeader","bind","receiverOnFinish","read","clearTimeout","finished","indexOf","property","get","subprotocol","require$$6","keyRegex","server","STATUS_CODES","h","abortHandshakeOrEmitwsClientError","websocketServer","handleProtocols","clientTracking","verifyClient","noServer","backlog","_server","createServer","body","writeHead","listen","emitConnection","_removeListeners","addListeners","listening","handleUpgrade","clients","_shouldEmitClose","shouldHandle","index","version","secWebSocketProtocol","info","secure","authorized","encrypted","verified","completeUpgrade","readable","writable","ws","next","delete","createWebSocketStream","Duplex","duplexOnEnd","duplexOnError","terminateOnDestroy","duplex","autoDestroy","objectMode","writableObjectMode","_destroy","called","_final","_read","Server","WebSocketServer","getDefaultExportFromCjs","Nudb","wsUrl","dataCallbacks","queue","WebSocketImpl","console","log","action","JSON","stringify","sendMessage","warn","_generateId","chars","str","charAt","floor","random","Date","now","fullMsg","subscribe","id","window","src","requireSrc"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}