name: Auto Increment Release

on:
  push:
    branches: [ "main" ]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Penting untuk mendapatkan semua tag

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Versi Node.js yang stabil

      - name: Minify JS
        run: |
          npm install -g terser
          terser db.js -o db.min.js --compress --mangle

      - name: Get Latest Tag and Generate New Version
        id: get_version
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags --abbrev=0 --match "v[0-9]*.[0-9]*.[0-9]*" 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"

          if [[ $LATEST_TAG =~ v([0-9]+)\.([0-9]+)\.([0-9]+) ]]; then
            MAJOR=${BASH_REMATCH[1]}
            MINOR=${BASH_REMATCH[2]}
            PATCH=$(( ${BASH_REMATCH[3]} + 1 ))
            NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          else
            NEW_VERSION="v1.0.0"
          fi

          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create Git Tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ env.new_version }}
          git push origin ${{ env.new_version }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.new_version }}
          name: "Release ${{ env.new_version }}"
          files: db.min.js
          body: |
            Auto-generated release
            Version: ${{ env.new_version }}